# Activities & Practices

# 1st Activity "Gradebook"
# You are a student and you're trying to organize your subjects and grades using Python. Let's explore what we've learned about lists to organize your subjects and scores.                     

last_semester_gradebook = [["politics", 80], ["latin", 96], ["dance", 97], ["architecture", 65]]

subjects = ["physics", "calculus", "poetry", "history"]
grades = [98, 97, 85, 88]

gradebook = [["physics", 98], ["calculus", 97], ["poetry", 85], ["history", 88]]
print(gradebook)

gradebook.append(["computer science", 100])
print(gradebook)

gradebook.append(["visual arts", 93])
print(gradebook)

gradebook[-1][-1] += 5
print(gradebook)

gradebook[2].remove("poetry")
print(gradebook)

gradebook[2].append("Pass")

full_gradebook = last_semester_gradebook + gradebook
print(full_gradebook)

print("-----------------------------------------------------")
print("-----------------------------------------------------")

# 2nd Activity "Len's Slice"
# You work at Lenâ€™s Slice, a new pizza joint in the neighborhood. You are going to use your knowledge of Python lists to organize some of your sales data.

toppings = ["pepperoni", "pineapple", "cheese", "sausage", "olives", "anchovies", "mushrooms"]
prices = [2, 6, 1, 3, 2, 7, 2]

num_two_dollar_slices = prices.count(2)
print(num_two_dollar_slices)

num_pizzas = len(toppings)
print(num_pizzas)

print("We sell {} different kinds of pizza!".format(num_pizzas))

pizza_and_prices = [[2, "pepperoni"], [6, "pineapple"], [1, "cheese"], [3, "sausage"], [2, "olives"], [7, "anchovies"], [2, "mushrooms"]]
print(pizza_and_prices)

pizza_and_prices.sort()
print(pizza_and_prices)

cheapest_pizza = pizza_and_prices[0]
print(cheapest_pizza)

priciest_pizza = pizza_and_prices[-1]
print(priciest_pizza)

pizza_and_prices.pop()
print(pizza_and_prices)

pizza_and_prices.insert(4, [2.5, "peppers"])
print(pizza_and_prices)

three_cheapest = pizza_and_prices[:3]
print(three_cheapest)

print("-----------------------------------------------------")
print("-----------------------------------------------------")

# Activities & Practices

# 01
# Which of the following lines of code would slice the list ["b", "c"] from mylist:
mylist = ["a", "b", "c", "d", "e"]
print(mylist[1:3])

# 02
# Which of the following code selects the last three elements of mylist?
print(mylist[-3:])

# 03
# Which of the following commands will return the length of the list mylist?
print(len(mylist))

# # 04
# # Which of the following lines of code will insert "Gus" as the middle element of the list friends?
friends = ["Annabelle", "Greg", "Katya", "Sol"]
#friends.insert(1, "Gus")  # turn on/off
friends.insert(-2, "Gus")  # turn on/off
print(friends)

# 05
# Which of the following would be generated by the code snippet?
mylist = ["a", "b", "c", "d", "e", "f"]
print(mylist[2:5])

# 06
# Which of the following would create a range object that starts at 3 and goes up to 15 (non-inclusive) in increments of 4?
print(range(3, 15, 4))

# 07
# Fill in the code that would allow us to remove the 5th element from the following list:
pizza_toppings = ["Cheese", "Pepperoni", "Garlic", "Pineapple", "Mushroom", "Prosciutto"]
pizza_toppings.pop(4)
print(pizza_toppings)

print("-----------------------------------------------------")
print("-----------------------------------------------------")

# Tuples
# What are Tuples?
# Tuples is a Data Structure that's allow us to store more pices of data inside of it, and might be thinking that sounds alike list, and tuples actually lot similar to lists except that tuples are immutable which means values you created can't be change.
# for example
my_info = ("Mohammad", 33, "Web Developer")
# output: ("Mohammad", 33, "Web Developer")
my_info[0] # "Mohammad"
my_info[1] # 33
my_info[-1] # "Web Developer"
#my_info[0] = "Khaled" # TypeError: 'tuple' object does not support item assignment

# unpacking a tuple
name, age, occupation = my_info
name # output: "Mohammad"
age # output: 33
occupation # output: "Web Developer"
# so as long I have variables on the left equals to number of element on tuple
# all elements stored on each of these variables respectively and that can be really useful

# one element tuple
# speacial case when we want to creat one element
one_element_tuple = (4, ) # not (4)


